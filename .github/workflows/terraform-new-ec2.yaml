name: Terraform Apply && Update DAGs

on:
  push:
    branches:
      - main
      - feat/**
    paths:
      - "terraform/ec2.tf"
  pull_request:
    branches:
      - main
    paths:
      - "terraform/ec2.tf"
  workflow_dispatch:


jobs:
  terraform:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.12.0
    
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
    
      - name: Adding credentials to run
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PUBLIC_KEY }}" > ~/.ssh/minha-keypair-ec2.pub
          chmod 644 ~/.ssh/minha-keypair-ec2.pub
            
      - name: Initialize Terraform
        run: terraform init
        working-directory: terraform

      - name: Validate Terraform configuration
        run: terraform validate
        working-directory: terraform

      - name: Plan Terraform changes
        run: terraform plan --target=aws_instance.airflow
        working-directory: terraform
        env:
          TF_VAR_master_password: ${{ secrets.TF_VAR_MASTER_PASSWORD }}

      - name: Apply Terraform changes
        run: terraform apply -auto-approve --target=aws_instance.airflow
        working-directory: terraform
        env:
          TF_VAR_master_password: ${{ secrets.TF_VAR_MASTER_PASSWORD }}

      - name: Get Terraform outputs
        id: terraform-outputs
        run: |
          echo "airflow_dns=$(terraform output -raw airflow_dns)" >> $GITHUB_OUTPUT
        working-directory: terraform

      - name: Update GitHub secrets with Terraform outputs
        env:
          GH_TOKEN: ${{ secrets.PAT_GH }}
        run: |
          gh secret set EC2_HOST --body "${{ steps.terraform-outputs.outputs.airflow_dns }}"
  
  dags:
    runs-on: ubuntu-latest
    needs: terraform
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
    
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/ec2-key.pem
          chmod 600 ~/.ssh/ec2-key.pem
      
      - name: Copy DAGs to EC2
        run: |
          rsync -avz --delete -e "ssh -o StrictHostKeyChecking=no -i ~/.ssh/ec2-key.pem" \
            airflow/dags/ ubuntu@${{ secrets.EC2_HOST }}:/tmp/dags-temp/
          
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/ec2-key.pem ubuntu@${{ secrets.EC2_HOST }} << 'EOF'
            sudo rm -rf /opt/airflow/dags/*
            sudo cp -r /tmp/dags-temp/* /opt/airflow/dags/
            sudo chown -R 50000:0 /opt/airflow/dags/
            rm -rf /tmp/dags-temp
          EOF